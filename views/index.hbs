<!DOCTYPE html>
<html lang="en">
    <head>
        <title></title>
        {{>headerStuff fontAwesome=true jQuery=true bootStrap=true}}

    </head>
    <body>
        <header>
            {{>navbar mainActive="active"}}
        </header>
        <main>
            <div class="jumbotron">
                <h1 class="display-3">Norton's Adventure</h1>
                <p class="lead">Classic Plus</p>
                <hr class="my-2">
                <p>...</p>
                <p class="lead">
                    <a class="startGame btn btn-primary btn-lg" href="#" role="button">Start Level 0</a>
                </p>
            </div>
        </main>

    <script src="/cdn/threejs/build/three.js"></script>
    <script src="/cdn/threejs/examples/js/controls/PointerLockControls.js"></script>    
    <script src="/cdn/threejs/examples/js/libs/inflate.min.js"></script>
    <script src="/cdn/threejs/examples/js/loaders/GLTFLoader.js"></script>
    {{!-- <script src="/cdn/threejs/examples/js/loaders/FBXLoader.js"></script> --}}
    {{!-- <script src="/cdn/threejs/examples/js/loaders/OBJLoader.js"></script> --}}

    <!-- The Modal -->
    <div id="myModal" class="myModal">

    <!-- Modal content -->
    <div class="modal-content">
        <div class="modal-header">
            <span class="close">&times;</span>
            <h2 id="modal-title"></h2>
        </div>
        <div class="modal-body">
        </div>
        <div class="modal-footer">
            <h3>Modal Footer</h3>
        </div>
    </div>

    </div>


    </body>
    <script type="module">

        // Some character details will be provided, either new or restored game
        var props = 
        localStorage.getItem('gameProps')? 
        localStorage.getItem('gameProps'): 
        {
            hero: {
                name: 'Dave',
                height: 20
            },
            level: 0,
            layouts: []
        }

        /** localStorage:
        localStorage will keep track of the character and his level layouts,
        since each time through the game will randomize the level layouts,
        and the character may need to backtrack to earlier scenes in his
        unique game. */
        
        import { Game } from '/game.js';
        import { SceneController } from '/scene/sceneController.js'

        /** When the user clicks START, it will instantiate the game and start.
        An empty layout for the given level will cause the layoutBuilder to
        generate a new layout for the scene. */

        Array.from(document.querySelectorAll('.startGame')).forEach(el => {
            el.addEventListener('click', e => {
                e.preventDefault();
                var game = new Game(props);

                game.eventDepot.addListener('modal', (data) => {

                    var modal = document.getElementById('myModal');
                    var closer = document.getElementsByClassName("close")[0];
                    var modalTitle = document.getElementById('modal-title').innerHTML = data.name;

                    modal.style.display = "block";
                    
                    closer.onclick = function() {
                        modal.style.display = "none";
                        game.eventDepot.fire('lockControls', {});

                    }

                    window.onclick = function(event) {
                        if (event.target == modal) {
                            modal.style.display = "none";
                        }
                    }
                })

                game.stats(); // currently just dumps objects to console
                var sceneController = new SceneController(game.layoutBuilder, game.eventDepot);
                sceneController.animateScene();
            })
        })



    </script>

</html>